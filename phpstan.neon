includes:
	- vendor/phpstan/phpstan-phpunit/extension.neon
	- vendor/phpstan/phpstan-webmozart-assert/extension.neon
	- vendor/phpstan/phpstan-mockery/extension.neon
	- vendor/nunomaduro/larastan/extension.neon

parameters:
	level: 6
	tmpDir: ./tmp/phpstan

	paths:
		- src

	ignoreErrors:
		# Closure is bound to $this, but PHPStan doesn't pick up on this.
		- '#Call to protected method (getPrefix|callCustomCreator)\(\) of class Illuminate\\Cache\\CacheManager#i'
		# Those aren't part of the interface, but they are publicly exposed in Repository implementation
		- '#Call to an undefined method Illuminate\\Cache\\Repository::(many|putMany|flushStale|tagList|entries)#i'
		# No it's not assigned, PHPStan is just wrong.
		- '#Readonly property TenantCloud\\LaravelBetterCache\\FailSafe\\FailSafeRepository::\$delegate is assigned outside of the constructor#i'
		# Yes, it isn't compatible. RedisTaggedCache doesn't expose any new APIs, I don't know why it exists.
		- '#Return type \(TenantCloud\\LaravelBetterCache\\FailSafe\\FailSafeRepository\) of method TenantCloud\\LaravelBetterCache\\FailSafe\\FailSafeRepository::tags\(\) should be compatible with return type \(Illuminate\\Cache\\TaggedCache\) of method Illuminate\\Cache\\Repository::tags\(\)#i'
		# Overwritten
		- '#Method TenantCloud\\LaravelBetterCache\\FailSafe\\FailSafeRepository::has\(\) has parameter \$key with no value type specified in iterable type array.#i'
		- '#Method TenantCloud\\LaravelBetterCache\\FailSafe\\FailSafeRepository::pull\(\) has parameter \$key with no value type specified in iterable type array.#i'
